name: Release Build

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
        type: string

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Install dependencies
      run: npm install

    - name: Build project
      run: npm run build

    - name: Copy dist to server/static
      shell: pwsh
      run: |
        New-Item -ItemType Directory -Force -Path server/static
        Copy-Item -Path dist/* -Destination server/static/ -Recurse
        Copy-Item -Path server/katalog -Destination server/static/katalog -Recurse
        
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install Python dependencies
      run: |
        pip install pyinstaller
        pip install flask
        pip install requests
        pip install pandas
        
    - name: Build executable
      run: |
        cd server
        pyinstaller --name "TouchNStars" --onefile --uac-admin --version-file=version.txt --add-data "static;static" server.py
        
    - name: Prepare release package
      shell: pwsh
      run: |
        $version = "${{ github.event.inputs.version }}"
        $releaseDir = "dist/TouchNStars-$version"
        
        # Create release directory
        New-Item -ItemType Directory -Force -Path $releaseDir
        
        # Copy files
        Copy-Item "server/dist/TouchNStars.exe" -Destination "$releaseDir/"
        Copy-Item "server/katalog" -Destination "$releaseDir/" -Recurse
        
        # Create zip file
        Compress-Archive -Path "$releaseDir/*" -DestinationPath "dist/TouchNStars-$version.zip" -Force
    - name: Create and upload release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create ${{ github.event.inputs.version }} --title "Release ${{ github.event.inputs.version }}" --generate-notes "dist/TouchNStars-${{ github.event.inputs.version }}.zip"
