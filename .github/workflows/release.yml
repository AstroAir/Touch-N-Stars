name: Release Build

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
        type: string

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
    
    - name: Install dependencies
      run: npm install
      
    - name: Build project
      run: npm run build
      
    - name: Copy dist to server/static
      run: |
        mkdir -p server/static
        cp -r dist/* server/static/
        cp -r server/katalog server/static/katalog
        
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        
    - name: Install pyinstaller
      run: pip install pyinstaller
      
    - name: Build executable
      run: |
        cd server
        pyinstaller --name "TouchNStars" --onefile --add-data "static;static" server.py
        
    - name: Prepare release package
      run: |
        mkdir -p dist/TouchNStars-${{ github.event.inputs.version }}
        cp server/dist/TouchNStars.exe dist/TouchNStars-${{ github.event.inputs.version }}/
        cp -r server/katalog dist/TouchNStars-${{ github.event.inputs.version }}/
        cd dist
        zip -r TouchNStars-${{ github.event.inputs.version }}.zip TouchNStars-${{ github.event.inputs.version }}

    - name: Create and upload release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create ${{ github.event.inputs.version }} \
          --title "Release ${{ github.event.inputs.version }}" \
          --notes "Release ${{ github.event.inputs.version }}" \
          dist/TouchNStars-${{ github.event.inputs.version }}.zip